{"ast":null,"code":"var _jsxFileName = \"/home/andrei/Node/BoardGameFurnace/client/src/App.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n/*import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport RoomScreen from '../src/сomponents/RoomScreen';\nimport GameScreen from '../src/сomponents/GameScreen';\n\nconst socket = io('http://localhost:3001');\n\nfunction App() {\n  const [sessionId, setSessionId] = useState('');\n  const [roomId, setRoomId] = useState('');\n  const [inGame, setInGame] = useState(false);\n\n  useEffect(() => {\n    socket.on('session created', (data) => {\n      setSessionId(data.gameId);\n      setInGame(true);\n      alert(`Session created! Share this ID with your friends: ${data.gameId}`);\n    });\n\n    socket.on('session joined', (data) => {\n      setInGame(true);\n      setSessionId(data.gameId);\n      alert(`Joined session: ${data.gameId}`);\n    });\n\n    socket.on('start game', () => {\n      alert('The game is starting!');\n    });\n\n    socket.on('error', (data) => {\n      alert(data.message);\n    });\n\n    return () => {\n      socket.off('session created');\n      socket.off('session joined');\n      socket.off('start game');\n      socket.off('error');\n    };\n  }, []);\n\n  return (\n      <div className=\"App\">\n        <main className=\"App-main\">\n          {!inGame ? (\n              <RoomScreen\n                  socket={socket}\n                  setRoomId={setRoomId}\n                  roomId={roomId}\n                  handleCreateSession={() => socket.emit('create session')}\n                  handleJoinSession={() => socket.emit('join session', roomId)}\n              />\n          ) : (\n              <GameScreen sessionId={sessionId || roomId} />\n          )}\n        </main>\n      </div>\n  );\n}*/\n\nconst renderProductionRow = side => {\n  if (side.type === \"exchange\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [side.details.from.map((resource, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `resource ${resource}`\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conversion\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"usage\",\n          children: [\"x\", side.maxUses]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"arrow\",\n          children: \"\\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), side.details.to.map((resource, idx) => {\n        if (resource === \"coin\" && typeof side.details.to[idx + 1] === 'number') {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"resource coin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"usage\",\n              children: [\"x\", side.details.to[idx + 1]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true);\n        } else if (typeof resource === 'number') {\n          // Пропускаем рендер числа, так как оно уже обработано в предыдущем условии\n          return null;\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `resource ${resource}`\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 19\n          }, this);\n        }\n      })]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: side.details.what.map((resource, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `resource ${resource}`\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  }\n};\nconst Card = ({\n  card\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"compensation\",\n      children: card.compensation.type === \"production\" ? card.compensation.details.what.map((resource, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `resource ${resource}`\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [card.compensation.details.from.map((resource, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `resource ${resource}`\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 23\n        }, this)), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"arrow\",\n          children: \"\\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this), card.compensation.details.to.map((resource, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `resource ${resource}`\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-placeholder\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0417\\u0434\\u0435\\u0441\\u044C \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0431\\u044B\\u0442\\u044C \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0430 \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u043E\\u0433\\u043E \\u0437\\u0434\\u0430\\u043D\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"production\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"production-row\",\n        children: renderProductionRow(card.firstSide)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"production-row transparent\",\n        children: renderProductionRow(card.secondSide)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 7\n  }, this);\n};\n_c = Card;\nconst CardsGrid = ({\n  cards\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards-grid\",\n    children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        card: card\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 7\n  }, this);\n};\n_c2 = CardsGrid;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0420\\u0435\\u043D\\u0434\\u0435\\u0440\\u0438\\u043D\\u0433 \\u0432\\u0441\\u0435\\u0445 \\u043A\\u0430\\u0440\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CardsGrid, {\n      cards: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 7\n  }, this);\n}\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"CardsGrid\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["renderProductionRow","side","type","_jsxDEV","_Fragment","children","details","from","map","resource","idx","className","fileName","_jsxFileName","lineNumber","columnNumber","maxUses","to","what","Card","card","compensation","firstSide","secondSide","_c","CardsGrid","cards","index","_c2","App","_c3","$RefreshReg$"],"sources":["/home/andrei/Node/BoardGameFurnace/client/src/App.js"],"sourcesContent":["/*import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport RoomScreen from '../src/сomponents/RoomScreen';\nimport GameScreen from '../src/сomponents/GameScreen';\n\nconst socket = io('http://localhost:3001');\n\nfunction App() {\n  const [sessionId, setSessionId] = useState('');\n  const [roomId, setRoomId] = useState('');\n  const [inGame, setInGame] = useState(false);\n\n  useEffect(() => {\n    socket.on('session created', (data) => {\n      setSessionId(data.gameId);\n      setInGame(true);\n      alert(`Session created! Share this ID with your friends: ${data.gameId}`);\n    });\n\n    socket.on('session joined', (data) => {\n      setInGame(true);\n      setSessionId(data.gameId);\n      alert(`Joined session: ${data.gameId}`);\n    });\n\n    socket.on('start game', () => {\n      alert('The game is starting!');\n    });\n\n    socket.on('error', (data) => {\n      alert(data.message);\n    });\n\n    return () => {\n      socket.off('session created');\n      socket.off('session joined');\n      socket.off('start game');\n      socket.off('error');\n    };\n  }, []);\n\n  return (\n      <div className=\"App\">\n        <main className=\"App-main\">\n          {!inGame ? (\n              <RoomScreen\n                  socket={socket}\n                  setRoomId={setRoomId}\n                  roomId={roomId}\n                  handleCreateSession={() => socket.emit('create session')}\n                  handleJoinSession={() => socket.emit('join session', roomId)}\n              />\n          ) : (\n              <GameScreen sessionId={sessionId || roomId} />\n          )}\n        </main>\n      </div>\n  );\n}*/\n\n\n\nconst renderProductionRow = (side) => {\n  if (side.type === \"exchange\") {\n    return (\n        <>\n          {side.details.from.map((resource, idx) => (\n              <div key={idx} className={`resource ${resource}`}></div>\n          ))}\n          <div className=\"conversion\">\n            <span className=\"usage\">x{side.maxUses}</span>\n            <span className=\"arrow\">→</span>\n          </div>\n          {side.details.to.map((resource, idx) => {\n            if (resource === \"coin\" && typeof side.details.to[idx + 1] === 'number') {\n              return (\n                    <>\n                    <div className=\"resource coin\"></div>\n                    <span className=\"usage\">x{side.details.to[idx + 1]}</span>\n                    </>\n              );\n            } else if (typeof resource === 'number') {\n              // Пропускаем рендер числа, так как оно уже обработано в предыдущем условии\n              return null;\n            } else {\n              return (\n                  <div key={idx} className={`resource ${resource}`}></div>\n              );\n            }\n          })}\n        </>\n    );\n  } else {\n    return (\n        <>\n          {side.details.what.map((resource, idx) => (\n          <div key={idx} className={`resource ${resource}`}></div>\n          ))}\n        </>\n    );\n  }\n}\n\nconst Card = ({card}) => {\n  return (\n      <div className=\"card\">\n        <div className=\"compensation\">\n          {card.compensation.type === \"production\" ? (\n              card.compensation.details.what.map((resource, idx) => (\n                  <div key={idx} className={`resource ${resource}`}></div>\n              ))\n          ) : (\n              <>\n                  {card.compensation.details.from.map((resource, idx) => (\n                      <div key={idx} className={`resource ${resource}`}></div>\n                  ))}\n                <span className=\"arrow\">→</span>\n                {card.compensation.details.to.map((resource, idx) => (\n                        <div key={idx} className={`resource ${resource}`}></div>\n                    ))}\n              </>\n          )}\n        </div>\n        <div className=\"image-placeholder\">\n          <p>Здесь может быть картинка производственного здания</p>\n        </div>\n        <div className=\"production\">\n          <div className={\"production-row\"}>\n            {renderProductionRow(card.firstSide)}\n          </div>\n          <div className={\"production-row transparent\"}>\n            {renderProductionRow(card.secondSide)}\n          </div>\n        </div>\n      </div>\n  );\n}\n\n\nconst CardsGrid = ({ cards }) => {\n  return (\n      <div className=\"cards-grid\">\n        {cards.map((card, index) => (\n            <div key={index} className=\"card-wrapper\">\n              <Card card={card} />\n            </div>\n        ))}\n      </div>\n  );\n}\n\nfunction App() {\n  return (\n      <div className=\"App\">\n        <h1>Рендеринг всех карт</h1>\n        <CardsGrid cards={cards} />\n      </div>\n  );\n}\n\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}