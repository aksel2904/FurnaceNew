{"ast":null,"code":"var _jsxFileName = \"/home/andrei/Node/BoardGameFurnace/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001');\nfunction App() {\n  _s();\n  const [sessionId, setSessionId] = useState('');\n  const [roomId, setRoomId] = useState('');\n  const [inGame, setInGame] = useState(false); // новое состояние\n  // const [card, setCard] = useState(null);\n  useEffect(() => {\n    // Подписка на события сокета\n    /*socket.on(\"card take\", (data) => {\n      setCard(data);\n      console.log(\"card take\");\n    })*/\n\n    socket.on('session created', data => {\n      setSessionId(data.gameId);\n      setInGame(true); // После создания игры убираем кнопки\n      alert(\"Session created! Share this ID with your friends: ${data.gameId}\");\n    });\n    socket.on('session joined', data => {\n      setInGame(true); // После присоединения тоже убираем кнопки\n      alert(\"Joined session: ${data.gameId}\");\n    });\n    socket.on('start game', () => {\n      alert('The game is starting!');\n    });\n    socket.on('error', data => {\n      alert(data.message);\n    });\n    return () => {\n      socket.off('session created');\n      socket.off('session joined');\n      socket.off('start game');\n      socket.off('error');\n    };\n  }, []);\n  const handleCreateSession = () => {\n    socket.emit('create session');\n  };\n  const handleJoinSession = () => {\n    if (!roomId) {\n      alert('Please enter a valid Game ID');\n      return;\n    }\n    socket.emit('join session', roomId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [!inGame && /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Furnace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App-main\",\n      children: [!inGame &&\n      /*#__PURE__*/\n      // Показываем только если игрок еще не в комнате\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Create new Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateSession,\n          children: \"New Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), sessionId && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Session ID: \", sessionId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Or Enter Game ID to join:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"input-game-id\",\n            type: \"text\",\n            placeholder: \"Game ID\",\n            value: roomId,\n            onChange: e => setRoomId(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleJoinSession,\n            children: \"Join Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), inGame && /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"game-id-created\",\n        children: [\"Game ID: \", sessionId || roomId, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this);\n}\n\n/*\nconst renderProductionRow = (side) => {\n  if (side.type === \"exchange\") {\n    return (\n        <>\n          {side.details.from.map((resource, idx) => (\n              <div key={idx} className={`resource ${resource}`}></div>\n          ))}\n          <div className=\"conversion\">\n            <span className=\"usage\">{side.maxUses}</span>\n            <span className=\"arrow\">→</span>\n          </div>\n          {side.details.to.map((resource, idx) => ( //  ACHTUNG!!!!! тут надо коины обрабатывать\n              <div key={idx} className={`resource ${resource}`}></div>\n          ))}\n        </>\n    );\n  }\n}\n\nconst Card = ({card}) => {\n  return (\n      <div className=\"card\">\n        <div className=\"compensation\">\n          {card.compensation.type === \"production\" ? (\n              card.compensation.details.what.map((resource, idx) => (\n                  <div key={idx} className={`resource ${resource}`}></div>\n              ))\n          ) : (\n              <>\n                  {card.compensation.details.from.map((resource, idx) => (\n                      <div key={idx} className={`resource ${resource}`}></div>\n                  ))}\n                    <span className=\"arrow\"></span>\n                    {card.compensation.details.to.map((resource, idx) => (\n                        <div key={idx} className={`resource ${resource}`}></div>\n                    ))}\n              </>\n          )}\n        </div>\n        <div className=\"image-placeholder\">\n          <p>Здесь может быть картинка производственного здания</p>\n        </div>\n        <div className=\"production\">\n          <div className={\"production-row\"}>\n            {renderProductionRow(card.firstSide)}\n          </div>\n          <div className={\"production-row transparent\"}>\n            {renderProductionRow(card.secondSide)}\n          </div>\n        </div>\n      </div>\n  );\n}\n*/\n_s(App, \"SzOKiJ/dARu6314hvNzwJW6P3hQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","App","_s","sessionId","setSessionId","roomId","setRoomId","inGame","setInGame","on","data","gameId","alert","message","off","handleCreateSession","emit","handleJoinSession","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/andrei/Node/BoardGameFurnace/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\n\nconst socket = io('http://localhost:3001');\n\nfunction App() {\n  const [sessionId, setSessionId] = useState('');\n  const [roomId, setRoomId] = useState('');\n  const [inGame, setInGame] = useState(false); // новое состояние\n  // const [card, setCard] = useState(null);\n  useEffect(() => {\n    // Подписка на события сокета\n    /*socket.on(\"card take\", (data) => {\n      setCard(data);\n      console.log(\"card take\");\n    })*/\n\n    socket.on('session created', (data) => {\n      setSessionId(data.gameId);\n      setInGame(true); // После создания игры убираем кнопки\n      alert(\"Session created! Share this ID with your friends: ${data.gameId}\");\n    });\n\n    socket.on('session joined', (data) => {\n      setInGame(true); // После присоединения тоже убираем кнопки\n      alert(\"Joined session: ${data.gameId}\");\n    });\n\n    socket.on('start game', () => {\n      alert('The game is starting!');\n    });\n\n    socket.on('error', (data) => {\n      alert(data.message);\n    });\n\n    return () => {\n      socket.off('session created');\n      socket.off('session joined');\n      socket.off('start game');\n      socket.off('error');\n    };\n  }, []);\n\n  const handleCreateSession = () => {\n    socket.emit('create session');\n  };\n\n  const handleJoinSession = () => {\n    if (!roomId) {\n      alert('Please enter a valid Game ID');\n      return;\n    }\n\n    socket.emit('join session', roomId);\n  };\n\n  return (\n      <div className=\"App\">\n        {!inGame && (\n            <header className=\"App-header\">\n              <h1>Furnace</h1>\n            </header>\n        )}\n\n        <main className=\"App-main\">\n          {!inGame && ( // Показываем только если игрок еще не в комнате\n              <>\n                <p>Create new Game</p>\n                <button onClick={handleCreateSession}>New Game</button>\n\n                {sessionId && <p>Session ID: {sessionId}</p>}\n\n                <p>Or Enter Game ID to join:</p>\n                <div className=\"input-container\">\n                  <input\n                      id=\"input-game-id\"\n                      type=\"text\"\n                      placeholder=\"Game ID\"\n                      value={roomId}\n                      onChange={(e) => setRoomId(e.target.value)}\n                  />\n                  <button onClick={handleJoinSession}>Join Game</button>\n                </div>\n              </>\n          )}\n\n          {inGame && <p id=\"game-id-created\">Game ID: {sessionId || roomId} {/*Card(card.findOne())*/}</p>}\n        </main>\n      </div>\n  );\n}\n\n/*\nconst renderProductionRow = (side) => {\n  if (side.type === \"exchange\") {\n    return (\n        <>\n          {side.details.from.map((resource, idx) => (\n              <div key={idx} className={`resource ${resource}`}></div>\n          ))}\n          <div className=\"conversion\">\n            <span className=\"usage\">{side.maxUses}</span>\n            <span className=\"arrow\">→</span>\n          </div>\n          {side.details.to.map((resource, idx) => ( //  ACHTUNG!!!!! тут надо коины обрабатывать\n              <div key={idx} className={`resource ${resource}`}></div>\n          ))}\n        </>\n    );\n  }\n}\n\nconst Card = ({card}) => {\n  return (\n      <div className=\"card\">\n        <div className=\"compensation\">\n          {card.compensation.type === \"production\" ? (\n              card.compensation.details.what.map((resource, idx) => (\n                  <div key={idx} className={`resource ${resource}`}></div>\n              ))\n          ) : (\n              <>\n                  {card.compensation.details.from.map((resource, idx) => (\n                      <div key={idx} className={`resource ${resource}`}></div>\n                  ))}\n                    <span className=\"arrow\"></span>\n                    {card.compensation.details.to.map((resource, idx) => (\n                        <div key={idx} className={`resource ${resource}`}></div>\n                    ))}\n              </>\n          )}\n        </div>\n        <div className=\"image-placeholder\">\n          <p>Здесь может быть картинка производственного здания</p>\n        </div>\n        <div className=\"production\">\n          <div className={\"production-row\"}>\n            {renderProductionRow(card.firstSide)}\n          </div>\n          <div className={\"production-row transparent\"}>\n            {renderProductionRow(card.secondSide)}\n          </div>\n        </div>\n      </div>\n  );\n}\n*/\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}